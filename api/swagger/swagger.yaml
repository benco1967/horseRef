swagger: "2.0"
info:
  version: "0.0.1"
  title: Sms Service
  description: | 
    Micro service to send sms, it's also the referentiel for the sent sms logs, 
    can use multiple sms brokers.
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
  
securityDefinitions:
  Bearer:
    description: |
       For accessing the API a valid JWT token must be passed in all the queries in
       the 'Authorization' header.
    
       A valid JWT token is generated by the *Account Management* after giving a 
       valid user & password.

       The following syntax must be used in the '**Authorization**' header : **Bearer xxxxxx.yyyyyyy.zzzzzz**
    type: apiKey
    name: Authorization
    in: header
  BearerAdm:
    type: apiKey
    name: Authorization
    in: header
paths:
  /admin:
    x-swagger-router-controller: admin
    get:
      summary: Get available operations
      description: Get available operations for service administration
      tags:
        - Administration 
        - API 
        - General
      operationId: general
      produces:
        - application/json
      responses:
        "200":
          description: The available operations
          headers:
            link:
              type: string
              description: Links to the others admin information
          schema:
            type: object
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
  /admin/version:
    x-swagger-router-controller: admin
    get:
      summary: Get version information
      description: Get the current service version information
      tags:
        - Administration 
        - API 
        - General
      operationId: version
      produces:
        - application/json
      responses:
        "200":
          description: The current version information
          schema:
            type: object
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
  /admin/status:
    x-swagger-router-controller: admin
    get:
      summary: Get status information
      description: Get the current service status information
      tags:
        - Administration 
        - API 
        - General
      operationId: status
      produces:
        - application/json
      responses:
        "200":
          description: The current status information
          schema:
            $ref: "#/definitions/StatusType"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
  /admin/license:
    x-swagger-router-controller: admin
    get:
      summary: Get the license
      description: Get the service license
      tags:
        - Administration 
        - API 
        - General
      operationId: license
      produces:
        - text/xml
        - application/json
      responses:
        "200":
          description: The license information (rfc4946)
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
  /admin/roles:
    x-swagger-router-controller: admin
    get:
      summary: Get the roles
      description: Get the service roles list
      tags:
        - Administration 
        - API 
        - General
      operationId: roles
      produces:
        - application/json
      responses:
        "200":
          description: The roles information
          schema:
            items:
              $ref: "#/definitions/RoleType"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
  /admin/swagger.json:
    x-swagger-pipe: swagger_raw

  /admin/settings:
    x-swagger-router-controller: adminSettings
    get:
      summary: Get the settings
      description: Get the general settings
      tags:
        - Management
        - API
        - General
        - Settings
      operationId: getAdminSettings
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update the settings
      description: update the general settings
      tags:
        - Management
        - API
        - General
        - Settings
      operationId: setAdminSettings
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: settings
          in: body
          description: Settings description
          required: true
          schema:
            type: object
      responses:
        "200":
          description: The settings updated
          schema:
              type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"

 
  /admin/tenants:
    x-swagger-router-controller: tenantsAdmin
    get:
      summary: Get the tenants
      description: Get the service tenants list
      tags:
        - Administration 
        - API 
        - Tenant
      operationId: getAllTenants
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      produces:
        - application/json
      responses:
        "200":
          description: The tenants information
          schema:
            type: array
            items:
              $ref: "#/definitions/TenantType"
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      summary: Create a tenant
      description: Create a new tenant
      tags:
        - Administration 
        - API 
        - Tenant
      operationId: createTenant
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tenant
          in: body
          description: Tenant description
          required: true
          schema:
            $ref: "#/definitions/TenantType"
      responses:
        "201":
          description: The tenant uri
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "409":
          description: Conflict because the tenant already exists
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"
              
  /admin/tenants/{tenant}/settings:
    x-swagger-router-controller: tenantsAdmin
    get:
      summary: Get the settings
      description: Get the private settings of the tenant
      tags:
        - Administration 
        - API 
        - Tenant
      operationId: getAdminTenantSettings
      x-tenantLoader: tenant
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update the settings
      description: update the private settings of the tenant
      tags:
        - Administration
        - API 
        - Tenant
      operationId: setAdminTenantSettings
      x-tenantLoader: tenant
      security:
        - BearerAdm: []
      x-security:
        roles: [adm]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: settings
          in: body
          description: Settings description
          required: true
          schema:
            type: object
      responses:
        "200":
          description: The settings updated
          schema:
              type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"

  /{tenant}/settings:
    x-swagger-router-controller: tenantSettings
    get:
      summary: Get the settings
      description: Get the settings of the tenant
      tags:
        - Management 
        - API 
        - Tenant
      operationId: getTenantSettings
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update the settings
      description: update the settings of the tenant
      tags:
        - Management 
        - API 
        - Tenant
      operationId: setTenantSettings
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: settings
          in: body
          description: Settings description
          required: true
          schema:
            type: object
      responses:
        "200":
          description: The settings updated
          schema:
              type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"

  /{tenant}/rolemapping:
    x-swagger-router-controller: tenantSettings
    get:
      summary: Get the group role mapping
      description: Get the group role mapping of the tenant
      tags:
        - Management
        - API
        - Tenant
      operationId: getTenantGroupRoleMapping
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update the group role mapping
      description: update the group role mapping of the tenant
      tags:
        - Management
        - API
        - Tenant
      operationId: setTenantGroupRoleMapping
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: groupRoleMapping
          in: body
          description: Group role mapping description
          required: true
          schema:
            type: object
      responses:
        "200":
          description: The settings updated
          schema:
              type: object
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "404":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Internal error
          schema:
              $ref: "#/definitions/ErrorResponse"


  /{tenant}/horses:
    x-swagger-router-controller: horses

    get:
      summary: Get the horses
      description: Get the group role mapping of the tenant
      tags:
        - API
        - horses
      operationId: getHorses
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: range
          in: query
          description: Range de la requête pour la pagination
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/HorseType"
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      summary: Create a horse
      description: Create a new horse
      tags:
        - API 
        - horses
      operationId: createHorse
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, snd]
      consumes:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: horse
          in: body
          description: The horse payload
          required: true
          schema:
            $ref: "#/definitions/HorseType"
      responses:
        "201":
          description: Success
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"

  /{tenant}/horses/{horseId}:
    x-swagger-router-controller: horses

    get:
      summary: Get the horse
      description: Get the horse for the tenant
      tags:
        - API
        - horses
      operationId: getHorse
      x-tenantLoader: tenant
      x-tenantDisabler: true
      security:
        - Bearer: []
      x-security:
        roles: [adm, mng]
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: Le nom du tenant
          required: true
          type: string
        - name: horseId
          in: path
          description: L'id du cheval
          required: true
          type: string
        - name: range
          in: query
          description: Range de la requête pour la pagination
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HorseType"
        "401":
          description: Authentification error
          schema:
              $ref: "#/definitions/ErrorResponse"
        "403":
          description: Unautorized error
          schema:
              $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
              $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:

  StatusEnum:
    enum:
      - ok
      - warning
      - error
      - unknow
      - undefined

  LocaleStringsType:
    items:
      properties:
        locale:
          type: string
        text:
          type: string
      required:
        - locale
        - text

  RoleType:
    properties:
      id:
        type: string
      title:
        $ref: "#/definitions/LocaleStringsType"
      summary:
        $ref: "#/definitions/LocaleStringsType"
    required:
      - id
      - title
      - summary

  StatusType:
    properties:
      status:
        $ref: "#/definitions/StatusEnum"
      dependencies:
        items:
          type: object
          properties:
            id:
              type: string
              minLength: 1
            description:
              type: string
            status:
              $ref: "#/definitions/StatusEnum"
            details:
              type: object
          required:
            - id
            - description
            - status

  TenantType:
    properties:
      id:
        description: Unique identifier of the tenant
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      expiredAt:
        description: An expiration time-stamp for the tenant
        type: string
        format: date-time
      enable:
        description: A boolean signifying if a tenant is enabled or not, a disabled tenant cannot be authenticated against
        type: boolean
        default: true
      lang:
        description: The preferred language for the messages of this tenant
        type: string
        default: fr
      texts:
        description: The language ressources, each text is an array of locale strings
        type: object
      contacts:
        description: The email addresses to specify the persons in charge of this tenant
        items:
          type: string
          format: email
        minItems: 1
        uniqueItems: true
      groupRoleMapping:
        description: Mapping between groups and service roles
        items:
          properties:
            group:
              type: string
            role:
              type: string
          required:
            - group
            - role
      authentication:
        description: Authentication strategies used and their configuration
        properties:
          mode:
            type: string
          options:
            type: object
        required:
          - mode
          - options
      settings:
        description: Administrations settings associated with this tenant, each service settings have their own schema
        type: object
      adminSettings:
        description: Settings associated with this tenant, each service settings have their own schema
        type: object
    required:
      - id
      - texts
      - contacts

  HorseType:
    properties:
      name:
        type: string
    required:
      - name

  ErrorResponse:
    properties:
      message:
        type: string
    required:
      - message
